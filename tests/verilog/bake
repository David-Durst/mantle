#!/usr/bin/env python
import os, glob, subprocess


class cd:
    """Context manager for changing the current working directory"""
    def __init__(self, newPath):
        self.newPath = os.path.expanduser(newPath)

    def __enter__(self):
        self.savedPath = os.getcwd()
        os.chdir(self.newPath)

    def __exit__(self, etype, value, traceback):
        os.chdir(self.savedPath)

tests = glob.glob('*')

def build():
    result = 0
    for test in tests:
        if os.path.isdir(test):
            if not test[0] == '_' and not test.startswith('test_'):
                with cd(test):
                    result |= subprocess.call(['./bake'])
    return result

def clean():
    for test in tests:
        if os.path.isdir(test):
            if not test[0] == '_' and not test.startswith('test_'):
                os.system('cd %s; ./bake clean; cd ..' % test)

def gold():
    for test in tests:
        if os.path.isdir(test):
            if not test[0] == '_' and not test.startswith('test_'):
                os.system('cd %s; ./bake gold; cd ..' % test)

clean()
exit(build())
#gold()
